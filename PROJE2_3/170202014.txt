
package prolab23;

import java.util.ArrayList;


public class KimyasalMadde {
    private int id;
    private String ad;
    private String ham_adi;
    private ArrayList<hammadde> atom;
    private int aded;
    private int ham_id;
    private int miktar;
    private int alis_maliyeti;
  
    private String uretim_tarihi;
    private int raf_omru;
    public KimyasalMadde() {
    }

    public KimyasalMadde(int id, int ham_id, int miktar, int alis_maliyeti, String uretim_tarihi, int raf_omru) {
        this.id = id;
        this.ham_id = ham_id;
        this.miktar = miktar;
        this.alis_maliyeti = alis_maliyeti;
        this.uretim_tarihi = uretim_tarihi;
        this.raf_omru = raf_omru;
    }

    public int getMiktar() {
        return miktar;
    }

    public void setMiktar(int miktar) {
        this.miktar = miktar;
    }

    public int getAlis_maliyeti() {
        return alis_maliyeti;
    }

    public void setAlis_maliyeti(int alis_maliyeti) {
        this.alis_maliyeti = alis_maliyeti;
    }

    public String getUretim_tarihi() {
        return uretim_tarihi;
    }

    public void setUretim_tarihi(String uretim_tarihi) {
        this.uretim_tarihi = uretim_tarihi;
    }

    public int getRaf_omru() {
        return raf_omru;
    }

    public void setRaf_omru(int raf_omru) {
        this.raf_omru = raf_omru;
    }

    public KimyasalMadde(int id, String ad) {
        this.id = id;
        this.ad = ad;
    }

    public String getHam_adi() {
        return ham_adi;
    }

    public KimyasalMadde(int id,   int aded, int ham_id) {
        this.id = id;
        this.aded = aded;
        this.ham_id = ham_id;
    }

    public void setHam_adi(String ham_adi) {
        this.ham_adi = ham_adi;
    }

    public int getAded() {
        return aded;
    }

    public void setAded(int aded) {
        this.aded = aded;
    }

    public int getHam_id() {
        return ham_id;
    }

    public void setHam_id(int ham_id) {
        this.ham_id = ham_id;
    }

    
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getAd() {
        return ad;
    }

    public void setAd(String ad) {
        this.ad = ad;
    }
    public void AtomEkle(hammadde ham){
        atom.add(ham);
    }
    public ArrayList<hammadde> getAtom() {
        return atom;
    }

    public void setAtom(ArrayList<hammadde> atom) {
        this.atom = atom;
    }
    
}

    private javax.swing.JButton tedarikci_ekle;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prolab23;

import java.util.ArrayList;
import java.util.Collection;
import javax.swing.table.DefaultTableModel;
import java.util.Collections;
import java.util.Comparator;


/**
 *
 * @author AHMET YILDIRIM
 */
public class ekran extends javax.swing.JDialog {
            DefaultTableModel ham_model;
            DefaultTableModel hamUret_ham_model;
            DefaultTableModel tedarikci_model;
            DefaultTableModel hamUret_tedarikci_model;
            DefaultTableModel musteriEkle_model;
            DefaultTableModel hamUretListele_model;
            DefaultTableModel hamMadde_listele_model;
            DefaultTableModel HamMaddeAl_Listele_model;
            
             veritabani_islemleri islemler=new veritabani_islemleri();
       
            /**
     * Creates new form ekran
     */
    public ekran(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        ham_model=(DefaultTableModel) ham_tablo.getModel();
        hamUret_ham_model=(DefaultTableModel) hamUret_hammadde_tablo.getModel();
        tedarikci_model=(DefaultTableModel) tedarikci_tablo.getModel();
        hamUret_tedarikci_model=(DefaultTableModel) hamUret_firma_tablo.getModel();
        musteriEkle_model=(DefaultTableModel) musteriEkle_tablo.getModel();
        hamUretListele_model=(DefaultTableModel) hamUret_Listele_tablo.getModel();
        hamMadde_listele_model=(DefaultTableModel) hammadde_listele_tablo.getModel();
        HamMaddeAl_Listele_model=(DefaultTableModel) tedarikci_urunsat_tablo.getModel();
        
        
        jpanel_kapat();
        hammadde_listele();
        tedarikci_listele();
        musteri_listele();
        hamUret_tedarikci_listele();
        hamUret_hammadde_listele();
        hamUret_ham_Listele();
       
    }
    public void jpanel_kapat(){
    hammadde.setVisible(false);
    tedarikciFirma.setVisible(false);
    musteriEkle.setVisible(false);
    musteriSiparis.setVisible(false);
    hamuret.setVisible(false);
    hammadde_al.setVisible(false);
    hammadde_al_1.setVisible(false);
    }
 
    public void hammadde_listele(){
        ham_model.setRowCount(0);
              ArrayList<hammadde> listele=new ArrayList<>();
           listele=islemler.hammadde_listele();
                if(listele!=null){
                    for(hammadde x:listele){
                    Object[] eklenecek ={x.getId(),x.getSembol(),x.getAdi()};
                    ham_model.addRow(eklenecek);
                    }
                }
    }
    public void hamUret_hammadde_listele(){
        hamUret_ham_model.setRowCount(0);
        hamMadde_listele_model.setRowCount(0);
              ArrayList<hammadde> listele=new ArrayList<>();
           listele=islemler.hammadde_listele();
                if(listele!=null){
                    for(hammadde x:listele){
                    Object[] eklenecek ={x.getId(),x.getSembol()};
                    hamUret_ham_model.addRow(eklenecek);
                    hamMadde_listele_model.addRow(eklenecek);
                    }
                }
    }
    public void tedarikci_listele(){
        tedarikci_model.setRowCount(0);
              ArrayList<tedarikcifirma> listele=new ArrayList<>();
           listele=islemler.tedarikcifirma_listele();
                if(listele!=null){
                    for(tedarikcifirma x:listele){
                    Object[] eklenecek ={x.getId(),x.getAdi(),x.get‹lke(),x.getSehir()};
                    tedarikci_model.addRow(eklenecek);
                    }
                }
    }
    public void hamUret_tedarikci_listele(){
        hamUret_tedarikci_model.setRowCount(0);
              ArrayList<tedarikcifirma> listele=new ArrayList<>();
           listele=islemler.tedarikcifirma_listele();
                if(listele!=null){
                    for(tedarikcifirma x:listele){
                    Object[] eklenecek ={x.getId(),x.getAdi()};
                    hamUret_tedarikci_model.addRow(eklenecek);
                    }
                }
    }
    
    public void hamUret_ham_Listele(){
                hamUretListele_model.setRowCount(0);
              ArrayList<hammadde> listele=new ArrayList<>();
                listele=islemler.hamUret_listele();
                if(listele!=null){
                    for(hammadde x:listele){
                    Object[] eklenecek ={x.getId(),x.getFirma_adi(),x.getSembol(),x.getMiktar(),x.getFiyat()};
                       hamUretListele_model.addRow(eklenecek);
                    }
                }
    }
    
    
    public void musteri_listele(){
        musteriEkle_model.setRowCount(0);
              ArrayList<musteri> listele=new ArrayList<>();
           listele=islemler.musteri_listele();
                if(listele!=null){
                    for(musteri x:listele){
                    Object[] eklenecek ={x.getId(),x.getAd(),x.getAdres()};
                    musteriEkle_model.addRow(eklenecek);
                    }
                }
    }
     public ArrayList<hammadde> sirala(ArrayList<hammadde> liste){
                   int i,j;
        hammadde tmp;
        int n =liste.size()-1;
        for(i=0;i<n;i++){
            for(j=0;j<n-i;j++){
                if(liste.get(j).getMasraf()>liste.get(j+1).getMasraf()){
                    tmp=liste.get(j);
                    liste.set(j,liste.get(j+1));
                    liste.set(j+1, tmp);
                }
            }
        
        }
    return liste;
     
     }
     public void HamMaddeAl_Listele(int ham_id){
                HamMaddeAl_Listele_model.setRowCount(0);
              ArrayList<hammadde> listele=new ArrayList<>();
                listele=islemler.tedarikci_urun_listele(ham_id);
                listele=sirala(listele);
   
                
                if(listele!=null){
                    for(hammadde x:listele){
                    Object[] eklenecek ={x.getId(),x.getFirma_id(),x.getFirma_adi(),x.getSembol(),x.getMiktar(),x.getMasraf(),x.getBirim_masraf()};
                       HamMaddeAl_Listele_model.addRow(eklenecek);
                    }
                }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hamuret = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        hamUret_firma_tablo = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        hamUret_secilen_id = new javax.swing.JLabel();
        hamUret_secilen_firmadi = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        hamUret_hammadde_tablo = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        hamUret_secilen_hamid = new javax.swing.JLabel();
        hamUret_secilen_hammadde = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        hamUret_uretimtarihi = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        hamUret_miktar = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        hamUret_rafomru = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        hamUret_fiyat = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        hamUret_ekle = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        hamUret_Listele_tablo = new javax.swing.JTable();
        hamUret_sil = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        musteriSiparis = new javax.swing.JPanel();
        musteriEkle = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        musteriEkle_id = new javax.swing.JLabel();
        musteriEkle_adi = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        musteriEkle_adres = new javax.swing.JTextArea();
        musteriEkle_sil = new javax.swing.JButton();
        musteriEkle_ekle = new javax.swing.JButton();
        musteriEkle_guncelle = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        musteriEkle_tablo = new javax.swing.JTable();
        tedarikciFirma = new javax.swing.JPanel();
        tedarikcifirma_id = new javax.swing.JLabel();
        tedarikci_ulkelabel = new javax.swing.JLabel();
        tedarikci_adilabel = new javax.swing.JLabel();
        tedarikci_sehirlabel = new javax.swing.JLabel();
        tedarikci_adi = new javax.swing.JTextField();
        tedarikci_sehir = new javax.swing.JTextField();
        tedarikci_ulke = new javax.swing.JTextField();
        tedarikci_guncelle = new javax.swing.JButton();
        tedarikci_sil = new javax.swing.JButton();
        tedarikci_ekle = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tedarikci_tablo = new javax.swing.JTable();
        hammadde = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ham_sembolu = new javax.swing.JTextField();
        ham_adi = new javax.swing.JTextField();
        ham_ekle = new javax.swing.JButton();
        ham_guncelle = new javax.swing.JButton();
        ham_sil = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ham_tablo = new javax.swing.JTable();
        ham_mesaj = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ham_id = new javax.swing.JLabel();
        Jpanel1 = new javax.swing.JPanel();
        hammadde_al = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        hammadde_listele_tablo = new javax.swing.JTable();
        hammaddeAl_hamsecbtn = new javax.swing.JButton();
        hammadde_al_1 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tedarikci_urunsat_tablo = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        hammaddeAl_alincakMiktar = new javax.swing.JTextField();
        hamMadde_al_buton = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        hamMaddeAl_mesaj = new javax.swing.JLabel();
        KimyasalMadde_uret = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        KimyasalUret_hammadde_tablo = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        Kimyasal_adi_ekle = new javax.swing.JTextField();
        kimyasalAdi_ekle = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        HammaddeAl = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        ham = new javax.swing.JMenu();
        hammadde_uret = new javax.swing.JMenu();
        tedarikci_firma = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        musteri_ekle = new javax.swing.JMenu();
        HamMaddeAl = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        kimyasal_ekle = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setText("‹retecek firmay˝ seÁiniz");

        hamUret_firma_tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Firma Ad˝"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        hamUret_firma_tablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hamUret_firma_tabloMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(hamUret_firma_tablo);
        if (hamUret_firma_tablo.getColumnModel().getColumnCount() > 0) {
            hamUret_firma_tablo.getColumnModel().getColumn(0).setResizable(false);
            hamUret_firma_tablo.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("SeÁilen Firma:");

        hamUret_secilen_id.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        hamUret_secilen_firmadi.setEditable(false);
        hamUret_secilen_firmadi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hamUret_secilen_firmadi.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel9.setText("‹retecek hammadde seÁiniz");

        hamUret_hammadde_tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Hammade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        hamUret_hammadde_tablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hamUret_hammadde_tabloMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(hamUret_hammadde_tablo);
        if (hamUret_hammadde_tablo.getColumnModel().getColumnCount() > 0) {
            hamUret_hammadde_tablo.getColumnModel().getColumn(0).setResizable(false);
            hamUret_hammadde_tablo.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("SeÁilen Hammadde:");

        hamUret_secilen_hamid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        hamUret_secilen_hammadde.setEditable(false);
        hamUret_secilen_hammadde.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hamUret_secilen_hammadde.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Miktar:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("‹retim Tarihi:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Kg");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("÷rn: 20032019");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Raf ÷mr¸:");

      

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("Y˝l");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setText("Fiyat:");

   

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("TL");

        hamUret_ekle.setText("Ekle");
      

        hamUret_Listele_tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Firma Ad˝", "Ham Madde", "Miktar˝", "Fiyat˝"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(hamUret_Listele_tablo);
        if (hamUret_Listele_tablo.getColumnModel().getColumnCount() > 0) {
            hamUret_Listele_tablo.getColumnModel().getColumn(0).setResizable(false);
            hamUret_Listele_tablo.getColumnModel().getColumn(1).setResizable(false);
            hamUret_Listele_tablo.getColumnModel().getColumn(2).setResizable(false);
            hamUret_Listele_tablo.getColumnModel().getColumn(3).setResizable(false);
            hamUret_Listele_tablo.getColumnModel().getColumn(4).setResizable(false);
        }

        hamUret_sil.setBackground(new java.awt.Color(0, 204, 255));
        hamUret_sil.setText("Sil");
       

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel19.setText("Hammaddeler:");

        javax.swing.GroupLayout hamuretLayout = new javax.swing.GroupLayout(hamuret);
        hamuret.setLayout(hamuretLayout);
        hamuretLayout.setHorizontalGroup(
            hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hamuretLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hamuretLayout.createSequentialGroup()
                        .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(hamuretLayout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(39, 39, 39)
                                .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(hamuretLayout.createSequentialGroup()
                                        .addComponent(hamUret_secilen_id, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(hamUret_secilen_firmadi, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(hamuretLayout.createSequentialGroup()
                                        .addComponent(hamUret_secilen_hamid, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(hamuretLayout.createSequentialGroup()
                                                .addComponent(hamUret_rafomru, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(hamuretLayout.createSequentialGroup()
                                                .addComponent(hamUret_fiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(hamuretLayout.createSequentialGroup()
                                                .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(hamUret_secilen_hammadde)
                                                    .addGroup(hamuretLayout.createSequentialGroup()
                                                        .addComponent(hamUret_miktar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(hamUret_uretimtarihi))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel14))
                                            .addGroup(hamuretLayout.createSequentialGroup()
                                                .addComponent(hamUret_ekle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(hamUret_sil, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(39, 39, 39))
                    .addGroup(hamuretLayout.createSequentialGroup()
                        .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(hamuretLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel9))
                        .addContainerGap(94, Short.MAX_VALUE))))
        );
        hamuretLayout.setVerticalGroup(
            hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hamuretLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel4)
                .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(hamuretLayout.createSequentialGroup()
                        .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(hamuretLayout.createSequentialGroup()
                                .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(hamuretLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(hamuretLayout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(hamUret_secilen_firmadi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(hamUret_secilen_id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(8, 8, 8)
                                        .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(hamUret_secilen_hamid, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(hamUret_secilen_hammadde, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(hamuretLayout.createSequentialGroup()
                                                .addGap(16, 16, 16)
                                                .addComponent(hamUret_miktar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(hamuretLayout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(hamuretLayout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(hamuretLayout.createSequentialGroup()
                                                .addGap(9, 9, 9)
                                                .addComponent(jLabel12))
                                            .addGroup(hamuretLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(hamUret_uretimtarihi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel14))))
                                        .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(hamuretLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel15)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hamuretLayout.createSequentialGroup()
                                                .addGap(13, 13, 13)
                                                .addComponent(hamUret_rafomru, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(hamuretLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel17))
                                    .addGroup(hamuretLayout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(hamuretLayout.createSequentialGroup()
                                .addGap(233, 233, 233)
                                .addComponent(hamUret_fiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(40, 40, 40)
                        .addComponent(jLabel9))
                    .addGroup(hamuretLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(hamUret_sil, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hamUret_ekle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(hamuretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout musteriSiparisLayout = new javax.swing.GroupLayout(musteriSiparis);
        musteriSiparis.setLayout(musteriSiparisLayout);
        musteriSiparisLayout.setHorizontalGroup(
            musteriSiparisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 905, Short.MAX_VALUE)
        );
        musteriSiparisLayout.setVerticalGroup(
            musteriSiparisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 733, Short.MAX_VALUE)
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("ID");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Adres");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("M¸˛teri Ad˝");

        musteriEkle_id.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

 

        musteriEkle_adres.setColumns(20);
        musteriEkle_adres.setRows(5);
        jScrollPane3.setViewportView(musteriEkle_adres);

        musteriEkle_sil.setText("Sil");
        musteriEkle_sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                musteriEkle_silActionPerformed(evt);
            }
        });

        musteriEkle_ekle.setText("Ekle");
        musteriEkle_ekle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                musteriEkle_ekleActionPerformed(evt);
            }
        });

        musteriEkle_guncelle.setText("G¸ncelle");
        musteriEkle_guncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                musteriEkle_guncelleActionPerformed(evt);
            }
        });

        musteriEkle_tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "›S›M", "ADRES"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        musteriEkle_tablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                musteriEkle_tabloMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(musteriEkle_tablo);
        if (musteriEkle_tablo.getColumnModel().getColumnCount() > 0) {
            musteriEkle_tablo.getColumnModel().getColumn(0).setResizable(false);
            musteriEkle_tablo.getColumnModel().getColumn(1).setResizable(false);
            musteriEkle_tablo.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout musteriEkleLayout = new javax.swing.GroupLayout(musteriEkle);
        musteriEkle.setLayout(musteriEkleLayout);
        musteriEkleLayout.setHorizontalGroup(
            musteriEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(musteriEkleLayout.createSequentialGroup()
                .addGroup(musteriEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(musteriEkleLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(musteriEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(musteriEkleLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(musteriEkle_adi, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(musteriEkleLayout.createSequentialGroup()
                                .addGroup(musteriEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(musteriEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(musteriEkleLayout.createSequentialGroup()
                                        .addGap(64, 64, 64)
                                        .addComponent(musteriEkle_id))
                                    .addGroup(musteriEkleLayout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, musteriEkleLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(musteriEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(musteriEkle_ekle, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(musteriEkle_guncelle, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(musteriEkle_sil, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(96, 96, 96)))
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
                .addContainerGap())
        );
        musteriEkleLayout.setVerticalGroup(
            musteriEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(musteriEkleLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(musteriEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(musteriEkleLayout.createSequentialGroup()
                        .addGroup(musteriEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(musteriEkle_id))
                        .addGap(10, 10, 10)
                        .addGroup(musteriEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(musteriEkle_adi, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(musteriEkleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addComponent(musteriEkle_ekle, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(musteriEkle_guncelle, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(musteriEkle_sil, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(266, Short.MAX_VALUE))
        );

        tedarikcifirma_id.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tedarikcifirma_id.setText("Firma ID");

        tedarikci_ulkelabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tedarikci_ulkelabel.setText("‹lke");

        tedarikci_adilabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tedarikci_adilabel.setText("Firma Ad˝");

        tedarikci_sehirlabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tedarikci_sehirlabel.setText("ﬁehir");

        tedarikci_adi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
      

        tedarikci_sehir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        

        tedarikci_ulke.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
   

        tedarikci_guncelle.setText("G¸ncelle");
        tedarikci_guncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tedarikci_guncelleActionPerformed(evt);
            }
        });

        tedarikci_sil.setText("Sil");
        tedarikci_sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tedarikci_silActionPerformed(evt);
            }
        });

        tedarikci_ekle.setText("Ekle");
        tedarikci_ekle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tedarikci_ekleActionPerformed(evt);
            }
        });

        tedarikci_tablo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tedarikci_tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Firma ID", "Firma Ad˝", "‹lke", "ﬁehir"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tedarikci_tablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tedarikci_tabloMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tedarikci_tablo);
        if (tedarikci_tablo.getColumnModel().getColumnCount() > 0) {
            tedarikci_tablo.getColumnModel().getColumn(0).setResizable(false);
            tedarikci_tablo.getColumnModel().getColumn(1).setResizable(false);
            tedarikci_tablo.getColumnModel().getColumn(2).setResizable(false);
            tedarikci_tablo.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout tedarikciFirmaLayout = new javax.swing.GroupLayout(tedarikciFirma);
        tedarikciFirma.setLayout(tedarikciFirmaLayout);
        tedarikciFirmaLayout.setHorizontalGroup(
            tedarikciFirmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tedarikciFirmaLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(tedarikciFirmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tedarikciFirmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(tedarikciFirmaLayout.createSequentialGroup()
                            .addComponent(tedarikci_adilabel)
                            .addGap(18, 18, 18)
                            .addComponent(tedarikci_adi, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(tedarikcifirma_id)
                        .addGroup(tedarikciFirmaLayout.createSequentialGroup()
                            .addGroup(tedarikciFirmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tedarikci_sehirlabel)
                                .addComponent(tedarikci_ulkelabel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(tedarikciFirmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tedarikci_ulke, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tedarikci_sehir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tedarikciFirmaLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(tedarikci_ekle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tedarikci_guncelle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tedarikci_sil)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 312, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
        tedarikciFirmaLayout.setVerticalGroup(
            tedarikciFirmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tedarikciFirmaLayout.createSequentialGroup()
                .addGroup(tedarikciFirmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tedarikciFirmaLayout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(tedarikcifirma_id)
                        .addGap(18, 18, 18)
                        .addGroup(tedarikciFirmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tedarikci_adilabel)
                            .addComponent(tedarikci_adi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(tedarikciFirmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tedarikci_ulkelabel)
                            .addComponent(tedarikci_ulke, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(tedarikciFirmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tedarikciFirmaLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(tedarikciFirmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tedarikci_sehirlabel)
                                    .addComponent(tedarikci_sehir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(tedarikciFirmaLayout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(tedarikciFirmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tedarikci_ekle, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tedarikci_guncelle, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tedarikci_sil, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(tedarikciFirmaLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(294, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Ad˝");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Sembol¸");

      

        ham_ekle.setText("Ekle");
        ham_ekle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ham_ekleActionPerformed(evt);
            }
        });

        ham_guncelle.setText("G¸ncelle");
        ham_guncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ham_guncelleActionPerformed(evt);
            }
        });

        ham_sil.setText("Sil");
        ham_sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ham_silActionPerformed(evt);
            }
        });

        ham_tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "sembol", "adi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ham_tablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ham_tabloMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ham_tablo);
        if (ham_tablo.getColumnModel().getColumnCount() > 0) {
            ham_tablo.getColumnModel().getColumn(0).setResizable(false);
            ham_tablo.getColumnModel().getColumn(1).setResizable(false);
            ham_tablo.getColumnModel().getColumn(2).setResizable(false);
        }

        ham_mesaj.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ham_mesaj.setForeground(new java.awt.Color(255, 0, 0));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("ID");

        ham_id.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout hammaddeLayout = new javax.swing.GroupLayout(hammadde);
        hammadde.setLayout(hammaddeLayout);
        hammaddeLayout.setHorizontalGroup(
            hammaddeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hammaddeLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(hammaddeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hammaddeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ham_ekle, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ham_guncelle, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ham_sil, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(584, 584, 584))
                    .addGroup(hammaddeLayout.createSequentialGroup()
                        .addGroup(hammaddeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ham_mesaj, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(hammaddeLayout.createSequentialGroup()
                                .addGroup(hammaddeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGroup(hammaddeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(hammaddeLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(hammaddeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(ham_sembolu)
                                            .addComponent(ham_adi, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)))
                                    .addGroup(hammaddeLayout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(ham_id, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(hammaddeLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 701, Short.MAX_VALUE))
        );
        hammaddeLayout.setVerticalGroup(
            hammaddeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hammaddeLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(hammaddeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(ham_id))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(hammaddeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ham_sembolu, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(hammaddeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ham_adi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ham_mesaj)
                .addGap(4, 4, 4)
                .addGroup(hammaddeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ham_ekle, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ham_guncelle, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ham_sil, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );

        javax.swing.GroupLayout Jpanel1Layout = new javax.swing.GroupLayout(Jpanel1);
        Jpanel1.setLayout(Jpanel1Layout);
        Jpanel1Layout.setHorizontalGroup(
            Jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 881, Short.MAX_VALUE)
        );
        Jpanel1Layout.setVerticalGroup(
            Jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 611, Short.MAX_VALUE)
        );

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel20.setText("Alaca˝n˝z ham maddeyi seÁiniz:");

        hammadde_listele_tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "ADI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(hammadde_listele_tablo);
        if (hammadde_listele_tablo.getColumnModel().getColumnCount() > 0) {
            hammadde_listele_tablo.getColumnModel().getColumn(0).setResizable(false);
            hammadde_listele_tablo.getColumnModel().getColumn(1).setResizable(false);
        }

        hammaddeAl_hamsecbtn.setText("Firmalar˝ Getir");
        hammaddeAl_hamsecbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hammaddeAl_hamsecbtnActionPerformed(evt);
            }
        });

        tedarikci_urunsat_tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Firma ID", "Firma Ad˝", "Ham Madde", "Miktar˝", "Toplam Maliyet", "Birim Maliyet"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
     
        jScrollPane8.setViewportView(tedarikci_urunsat_tablo);
        if (tedarikci_urunsat_tablo.getColumnModel().getColumnCount() > 0) {
            tedarikci_urunsat_tablo.getColumnModel().getColumn(0).setResizable(false);
            tedarikci_urunsat_tablo.getColumnModel().getColumn(1).setResizable(false);
            tedarikci_urunsat_tablo.getColumnModel().getColumn(2).setResizable(false);
            tedarikci_urunsat_tablo.getColumnModel().getColumn(3).setResizable(false);
            tedarikci_urunsat_tablo.getColumnModel().getColumn(4).setResizable(false);
            tedarikci_urunsat_tablo.getColumnModel().getColumn(5).setResizable(false);
            tedarikci_urunsat_tablo.getColumnModel().getColumn(6).setResizable(false);
        }

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel21.setText("Firmay˝ seÁiniz");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel22.setText("Alaca˝n˝z Miktar:");

       

        hamMadde_al_buton.setText("AL");
        hamMadde_al_buton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hamMadde_al_butonActionPerformed(evt);
            }
        });

        hamMaddeAl_mesaj.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout hammadde_al_1Layout = new javax.swing.GroupLayout(hammadde_al_1);
        hammadde_al_1.setLayout(hammadde_al_1Layout);
        hammadde_al_1Layout.setHorizontalGroup(
            hammadde_al_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hammadde_al_1Layout.createSequentialGroup()
                .addGroup(hammadde_al_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hammadde_al_1Layout.createSequentialGroup()
                        .addGroup(hammadde_al_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(hammadde_al_1Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jLabel21))
                            .addGroup(hammadde_al_1Layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(hammadde_al_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addGroup(hammadde_al_1Layout.createSequentialGroup()
                                        .addComponent(jLabel22)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(hammaddeAl_alincakMiktar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(93, 93, 93)
                                        .addComponent(hamMadde_al_buton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hammadde_al_1Layout.createSequentialGroup()
                        .addGap(0, 28, Short.MAX_VALUE)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(hammadde_al_1Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(hamMaddeAl_mesaj, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        hammadde_al_1Layout.setVerticalGroup(
            hammadde_al_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hammadde_al_1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(hammadde_al_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(hammaddeAl_alincakMiktar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hamMadde_al_buton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(hamMaddeAl_mesaj, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout hammadde_alLayout = new javax.swing.GroupLayout(hammadde_al);
        hammadde_al.setLayout(hammadde_alLayout);
        hammadde_alLayout.setHorizontalGroup(
            hammadde_alLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hammadde_alLayout.createSequentialGroup()
                .addGroup(hammadde_alLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hammadde_alLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hammadde_alLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(hammadde_alLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hammaddeAl_hamsecbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(hammadde_al_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88))
        );
        hammadde_alLayout.setVerticalGroup(
            hammadde_alLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hammadde_alLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(hammadde_alLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hammadde_al_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(hammadde_alLayout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(hammaddeAl_hamsecbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 391, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel26.setText("›Áeren hammadde seÁiniz");

        KimyasalUret_hammadde_tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Hammade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
     
        jScrollPane11.setViewportView(KimyasalUret_hammadde_tablo);
        if (KimyasalUret_hammadde_tablo.getColumnModel().getColumnCount() > 0) {
            KimyasalUret_hammadde_tablo.getColumnModel().getColumn(0).setResizable(false);
            KimyasalUret_hammadde_tablo.getColumnModel().getColumn(1).setResizable(false);
        }

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "ADI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel24.setText("Kimyasal Madde Ad˝:");

     

        kimyasalAdi_ekle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        kimyasalAdi_ekle.setText("EKLE");
    

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel25.setText("Kimyasal maddeyi seÁiniz");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel27.setText("Adedi:");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("EKLE");

        javax.swing.GroupLayout KimyasalMadde_uretLayout = new javax.swing.GroupLayout(KimyasalMadde_uret);
        KimyasalMadde_uret.setLayout(KimyasalMadde_uretLayout);
        KimyasalMadde_uretLayout.setHorizontalGroup(
            KimyasalMadde_uretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KimyasalMadde_uretLayout.createSequentialGroup()
                .addGroup(KimyasalMadde_uretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KimyasalMadde_uretLayout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Kimyasal_adi_ekle, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78)
                        .addComponent(kimyasalAdi_ekle, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(KimyasalMadde_uretLayout.createSequentialGroup()
                        .addGroup(KimyasalMadde_uretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(KimyasalMadde_uretLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(KimyasalMadde_uretLayout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jLabel25)))
                        .addGroup(KimyasalMadde_uretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(KimyasalMadde_uretLayout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(jLabel27)
                                .addGap(18, 18, 18)
                                .addGroup(KimyasalMadde_uretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)))
                            .addGroup(KimyasalMadde_uretLayout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(jLabel26)))))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        KimyasalMadde_uretLayout.setVerticalGroup(
            KimyasalMadde_uretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KimyasalMadde_uretLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(KimyasalMadde_uretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(Kimyasal_adi_ekle, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kimyasalAdi_ekle, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                .addGroup(KimyasalMadde_uretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(KimyasalMadde_uretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KimyasalMadde_uretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KimyasalMadde_uretLayout.createSequentialGroup()
                        .addGroup(KimyasalMadde_uretLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(95, 95, 95)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(150, 150, 150))
        );

        HammaddeAl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jMenu2.setText("Ham Madde");

        ham.setText("Ham Madde Ekle");
        ham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hamMouseClicked(evt);
            }
        });
        jMenu2.add(ham);

        hammadde_uret.setText("Ham Madde ‹ret");
        hammadde_uret.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hammadde_uretMouseClicked(evt);
            }
        });
        jMenu2.add(hammadde_uret);

        HammaddeAl.add(jMenu2);

        tedarikci_firma.setText("TedarikÁi Firma");
        tedarikci_firma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tedarikci_firmaMouseClicked(evt);
            }
        });
        HammaddeAl.add(tedarikci_firma);

        jMenu1.setText("M¸˛teri");

        musteri_ekle.setText("M¸˛teri Ekle");
        musteri_ekle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                musteri_ekleMouseClicked(evt);
            }
        });
        jMenu1.add(musteri_ekle);

        HammaddeAl.add(jMenu1);

        HamMaddeAl.setText("Ham Madde Al");
        HamMaddeAl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HamMaddeAlMouseClicked(evt);
            }
        });
        HammaddeAl.add(HamMaddeAl);

        jMenu3.setText("Kimyasal ‹r¸n");

        kimyasal_ekle.setText("Ekle");
        jMenu3.add(kimyasal_ekle);

        HammaddeAl.add(jMenu3);

        setJMenuBar(HammaddeAl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hammadde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addComponent(tedarikciFirma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(musteriEkle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(musteriSiparis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(200, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(hamuret, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 174, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addComponent(Jpanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(211, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addComponent(hammadde_al, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(18, 18, 18)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(99, 99, 99)
                    .addComponent(KimyasalMadde_uret, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(99, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hammadde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addComponent(tedarikciFirma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(musteriEkle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(musteriSiparis, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(hamuret, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(65, 65, 65)
                    .addComponent(Jpanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(57, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(hammadde_al, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(KimyasalMadde_uret, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hamMouseClicked
        jpanel_kapat();
        hammadde.setVisible(true);
        hammadde_listele();
    }//GEN-LAST:event_hamMouseClicked


    private void ham_ekleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ham_ekleActionPerformed
           ham_model.setRowCount(0);
           String sembol= ham_sembolu.getText();
           String adi=ham_adi.getText();
           if(sembol!=""){
           boolean ekle= islemler.ham_ekle(sembol,adi);
           if(ekle==true){
               System.out.println("Eklendi.");
                hammadde_listele();
           }else{
               System.out.println("Eklenemedi");
           }
         
         }else{
               ham_mesaj.setText("Sembol alan˝ bo˛!");
           }
    }//GEN-LAST:event_ham_ekleActionPerformed

    private void ham_tabloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ham_tabloMouseClicked
            int secili_row =ham_tablo.getSelectedRow();
            ham_sembolu.setText(ham_model.getValueAt(secili_row, 1).toString());
            ham_adi.setText(ham_model.getValueAt(secili_row, 2).toString());
            ham_id.setText(ham_model.getValueAt(secili_row, 0).toString());
    }//GEN-LAST:event_ham_tabloMouseClicked

    private void ham_guncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ham_guncelleActionPerformed
        int id=Integer.valueOf(ham_id.getText());
            islemler.hammadde_guncelle(id,ham_sembolu.getText(),ham_adi.getText());
             hammadde_listele();
    }//GEN-LAST:event_ham_guncelleActionPerformed

    private void ham_silActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ham_silActionPerformed
          int id=Integer.valueOf(ham_id.getText());
          islemler.hammadde_sil(id);
           hammadde_listele();
    }//GEN-LAST:event_ham_silActionPerformed

    private void tedarikci_firmaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tedarikci_firmaMouseClicked
       jpanel_kapat();
       tedarikciFirma.setVisible(true);
    }//GEN-LAST:event_tedarikci_firmaMouseClicked

    
    private void tedarikci_ekleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tedarikci_ekleActionPerformed
        
         tedarikci_model.setRowCount(0);
           String firma_adi= tedarikci_adi.getText();
           String ulke=tedarikci_ulke.getText();
           String sehir=tedarikci_sehir.getText();
           
       
           boolean ekle= islemler.tedarikcifirma_ekle(firma_adi, ulke, sehir);
           if(ekle==true){
               System.out.println("Eklendi.");
                tedarikci_listele();
           }else{
               System.out.println("Eklenemedi");
           }
         
    
        
        
    }//GEN-LAST:event_tedarikci_ekleActionPerformed


    private void musteriEkle_ekleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_musteriEkle_ekleActionPerformed
            musteriEkle_model.setRowCount(0);
           String isim= musteriEkle_adi.getText();
           String adres=musteriEkle_adres.getText();
           
           boolean ekle= islemler.musteri_ekle(isim,adres);
           if(ekle==true){
               System.out.println("Eklendi.");
                musteri_listele();
           }else{
               System.out.println("Eklenemedi");
           }
         
    }//GEN-LAST:event_musteriEkle_ekleActionPerformed

    private void musteriEkle_guncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_musteriEkle_guncelleActionPerformed
          int id=Integer.valueOf(musteriEkle_id.getText());
            islemler.musteri_guncelle(id,musteriEkle_adi.getText(),musteriEkle_adres.getText());
             musteri_listele();
    }//GEN-LAST:event_musteriEkle_guncelleActionPerformed

    private void musteriEkle_silActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_musteriEkle_silActionPerformed
         int id=Integer.valueOf(musteriEkle_id.getText());
          islemler.musteri_sil(id);
           musteri_listele();
    }//GEN-LAST:event_musteriEkle_silActionPerformed

    private void tedarikci_guncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tedarikci_guncelleActionPerformed
            int id=Integer.valueOf(tedarikcifirma_id.getText());
            islemler.tedarikcifirma_guncelle(id,tedarikci_adi.getText(),tedarikci_ulke.getText(),tedarikci_sehir.getText());
             tedarikci_listele();
    }//GEN-LAST:event_tedarikci_guncelleActionPerformed

    private void tedarikci_silActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tedarikci_silActionPerformed
         int id=Integer.valueOf(tedarikcifirma_id.getText());
          islemler.tedarikcifirma_sil(id);
           tedarikci_listele();
    }//GEN-LAST:event_tedarikci_silActionPerformed

    private void tedarikci_tabloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tedarikci_tabloMouseClicked
            int secili_row =tedarikci_tablo.getSelectedRow();
            tedarikci_adi.setText(tedarikci_model.getValueAt(secili_row, 1).toString());
            tedarikci_ulke.setText(tedarikci_model.getValueAt(secili_row, 2).toString());
            tedarikci_sehir.setText(tedarikci_model.getValueAt(secili_row, 3).toString());
            tedarikcifirma_id.setText(tedarikci_model.getValueAt(secili_row, 0).toString());
    }//GEN-LAST:event_tedarikci_tabloMouseClicked

    private void musteri_ekleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_musteri_ekleMouseClicked
        jpanel_kapat();
        musteriEkle.setVisible(true);
    }//GEN-LAST:event_musteri_ekleMouseClicked

    private void musteriEkle_tabloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_musteriEkle_tabloMouseClicked
           int secili_row =musteriEkle_tablo.getSelectedRow();
            musteriEkle_adi.setText(musteriEkle_model.getValueAt(secili_row, 1).toString());
            musteriEkle_adres.setText(musteriEkle_model.getValueAt(secili_row, 2).toString());
            musteriEkle_id.setText(musteriEkle_model.getValueAt(secili_row, 0).toString());
    }//GEN-LAST:event_musteriEkle_tabloMouseClicked

    private void hammadde_uretMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hammadde_uretMouseClicked
    jpanel_kapat();
    hamuret.setVisible(true);
    hamUret_tedarikci_listele();
    hamUret_hammadde_listele();
    hamUret_ham_Listele();
    }//GEN-LAST:event_hammadde_uretMouseClicked


    private void hamUret_firma_tabloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hamUret_firma_tabloMouseClicked
                int secili_row =hamUret_firma_tablo.getSelectedRow();
            hamUret_secilen_firmadi.setText(hamUret_tedarikci_model.getValueAt(secili_row, 1).toString());
            hamUret_secilen_id.setText(hamUret_tedarikci_model.getValueAt(secili_row, 0).toString());
 
    }//GEN-LAST:event_hamUret_firma_tabloMouseClicked

    private void hamUret_hammadde_tabloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hamUret_hammadde_tabloMouseClicked
                int secili_row =hamUret_hammadde_tablo.getSelectedRow();
            hamUret_secilen_hammadde.setText(hamUret_ham_model.getValueAt(secili_row, 1).toString());
            hamUret_secilen_hamid.setText(hamUret_ham_model.getValueAt(secili_row, 0).toString());
    }//GEN-LAST:event_hamUret_hammadde_tabloMouseClicked

    private void hamUret_ekleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hamUret_ekleActionPerformed
        int tedarikci_id=Integer.valueOf(hamUret_secilen_id.getText());
        int hammadde_id=Integer.valueOf(hamUret_secilen_hamid.getText());
        int miktar=Integer.valueOf(hamUret_miktar.getText());
        int rafomru=Integer.valueOf(hamUret_rafomru.getText());
        int fiyat=Integer.valueOf(hamUret_fiyat.getText());
        String uretim_tarihi=hamUret_uretimtarihi.getText();
       
          
           boolean ekle=  islemler.hamMadde_uret(tedarikci_id,hammadde_id,miktar,rafomru,fiyat,uretim_tarihi);
        
           if(ekle==true){
               System.out.println("Eklendi.");
                musteri_listele();
                hamUret_tedarikci_listele();
                hamUret_hammadde_listele();
                hamUret_ham_Listele();
           }else{
               System.out.println("Eklenemedi");
           }
    }//GEN-LAST:event_hamUret_ekleActionPerformed


    private void HamMaddeAlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HamMaddeAlMouseClicked
      jpanel_kapat();
      hammadde_al.setVisible(true);
      hammadde_listele();
    }//GEN-LAST:event_HamMaddeAlMouseClicked

    private void hammaddeAl_hamsecbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hammaddeAl_hamsecbtnActionPerformed
           int secili_row =hammadde_listele_tablo.getSelectedRow();
            int ham_id=(int) hamMadde_listele_model.getValueAt(secili_row, 0);
            String ham_adi=(String) hamMadde_listele_model.getValueAt(secili_row, 1);
            hammadde_al_1.setVisible(true);
            HamMaddeAl_Listele(ham_id);
    }//GEN-LAST:event_hammaddeAl_hamsecbtnActionPerformed


    private void hamMadde_al_butonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hamMadde_al_butonActionPerformed
           int secili_row =tedarikci_urunsat_tablo.getSelectedRow();
        if(secili_row==-1){
            hamMaddeAl_mesaj.setText("L¸tfen ¸r¸n alaca˝n˝z firmay˝ seÁiniz");
            }else{
            int id=(int)HamMaddeAl_Listele_model.getValueAt(secili_row, 0);
             int ham_id=islemler.hamId_Bul(id);
            int toplam_maliyet=(int)HamMaddeAl_Listele_model.getValueAt(secili_row,5);
            int veri_miktar=(int)HamMaddeAl_Listele_model.getValueAt(secili_row,4);
            int miktar=Integer.valueOf(hammaddeAl_alincakMiktar.getText());
            if(miktar>veri_miktar){
             hamMaddeAl_mesaj.setText("SeÁtiiniz firmada istediin miktarda ¸r¸n bulunmamakta.");
            
            }else{
            hamMaddeAl_mesaj.setText(" ");
               
           islemler.HamMaddeAl(id,ham_id,veri_miktar,miktar,toplam_maliyet);
            }
            
        }
           
           
          
    }//GEN-LAST:event_hamMadde_al_butonActionPerformed


   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ekran dialog = new ekran(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu HamMaddeAl;
    private javax.swing.JMenuBar HammaddeAl;
    private javax.swing.JPanel Jpanel1;
    private javax.swing.JPanel KimyasalMadde_uret;
    private javax.swing.JTable KimyasalUret_hammadde_tablo;
    private javax.swing.JTextField Kimyasal_adi_ekle;
    private javax.swing.JMenu ham;
    private javax.swing.JLabel hamMaddeAl_mesaj;
    private javax.swing.JButton hamMadde_al_buton;
    private javax.swing.JTable hamUret_Listele_tablo;
    private javax.swing.JButton hamUret_ekle;
    private javax.swing.JTable hamUret_firma_tablo;
    private javax.swing.JTextField hamUret_fiyat;
    private javax.swing.JTable hamUret_hammadde_tablo;
    private javax.swing.JTextField hamUret_miktar;
    private javax.swing.JTextField hamUret_rafomru;
    private javax.swing.JTextField hamUret_secilen_firmadi;
    private javax.swing.JLabel hamUret_secilen_hamid;
    private javax.swing.JTextField hamUret_secilen_hammadde;
    private javax.swing.JLabel hamUret_secilen_id;
    private javax.swing.JButton hamUret_sil;
    private javax.swing.JTextField hamUret_uretimtarihi;
    private javax.swing.JTextField ham_adi;
    private javax.swing.JButton ham_ekle;
    private javax.swing.JButton ham_guncelle;
    private javax.swing.JLabel ham_id;
    private javax.swing.JLabel ham_mesaj;
    private javax.swing.JTextField ham_sembolu;
    private javax.swing.JButton ham_sil;
    private javax.swing.JTable ham_tablo;
    private javax.swing.JPanel hammadde;
    private javax.swing.JTextField hammaddeAl_alincakMiktar;
    private javax.swing.JButton hammaddeAl_hamsecbtn;
    private javax.swing.JPanel hammadde_al;
    private javax.swing.JPanel hammadde_al_1;
    private javax.swing.JTable hammadde_listele_tablo;
    private javax.swing.JMenu hammadde_uret;
    private javax.swing.JPanel hamuret;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton kimyasalAdi_ekle;
    private javax.swing.JMenu kimyasal_ekle;
    private javax.swing.JPanel musteriEkle;
    private javax.swing.JTextField musteriEkle_adi;
    private javax.swing.JTextArea musteriEkle_adres;
    private javax.swing.JButton musteriEkle_ekle;
    private javax.swing.JButton musteriEkle_guncelle;
    private javax.swing.JLabel musteriEkle_id;
    private javax.swing.JButton musteriEkle_sil;
    private javax.swing.JTable musteriEkle_tablo;
    private javax.swing.JPanel musteriSiparis;
    private javax.swing.JMenu musteri_ekle;
    private javax.swing.JPanel tedarikciFirma;
    private javax.swing.JTextField tedarikci_adi;
    private javax.swing.JLabel tedarikci_adilabel;
    private javax.swing.JButton tedarikci_ekle;
    private javax.swing.JMenu tedarikci_firma;
    private javax.swing.JButton tedarikci_guncelle;
    private javax.swing.JTextField tedarikci_sehir;
    private javax.swing.JLabel tedarikci_sehirlabel;
    private javax.swing.JButton tedarikci_sil;
    private javax.swing.JTable tedarikci_tablo;
    private javax.swing.JTextField tedarikci_ulke;
    private javax.swing.JLabel tedarikci_ulkelabel;
    private javax.swing.JTable tedarikci_urunsat_tablo;
    private javax.swing.JLabel tedarikcifirma_id;
    // End of variables declaration//GEN-END:variables
}


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prolab23;

import java.util.ArrayList;
import javax.swing.SpringLayout;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AHMET YILDIRIM
 */
public class ekran2 extends javax.swing.JDialog {

     DefaultTableModel KimyasalMaddeAdi_model;
      DefaultTableModel HamMaddeAdi_model;       
      DefaultTableModel KimyasalMadde_Listele_model;
      DefaultTableModel KimyasalListele_ham_model;
      DefaultTableModel Kimyasal_Uret_model;
    veritabani_islemleri islemler=new veritabani_islemleri();
    public ekran2(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Jpanel_kapat();
       
        KimyasalMaddeAdi_model=(DefaultTableModel) KimyasalMadde_tablo.getModel();
        HamMaddeAdi_model=(DefaultTableModel) HamMadde_tablo.getModel();
        KimyasalMadde_Listele_model=(DefaultTableModel) KimyasalMadde_Listele_Tablo.getModel();
        KimyasalListele_ham_model=(DefaultTableModel) KimyasalListele_Ham.getModel();
        Kimyasal_Uret_model =(DefaultTableModel) KimyasalMadde_Uret_Tablo.getModel();
    }


    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        KimyasalUret_Jpanel = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        KimyasalMadde_Uret_Tablo = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        uretilicekMiktar = new javax.swing.JTextField();
        KimysalUret_UretimTarihi = new javax.swing.JTextField();
        KimysalUret_RafOmru = new javax.swing.JTextField();
        KimysalUret_Button = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        Kimyasal_ID = new javax.swing.JLabel();
        KimyasalUret_mesaj = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        KimyasalUret_karOrani = new javax.swing.JTextField();
        KimyasalUrunListele = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        KimyasalMadde_Listele_Tablo = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        KimyasalListele_Ham = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        KimyasalUrunEKLE = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        KimyasakAd˝_ekleButon = new javax.swing.JButton();
        KimyasalAdi_ekle = new javax.swing.JTextField();
        kimyasalEkle_mesaj = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        KimyasalMadde_tablo = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        HamMadde_tablo = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        Kimyasal_Ham_EkleButon = new javax.swing.JButton();
        KimyasalEkle_mesaj = new javax.swing.JLabel();
        KarOrani_Jpanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        harcana_para = new javax.swing.JLabel();
        kazanilan_para = new javax.swing.JLabel();
        kar_miktari = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        KimyasalEkle = new javax.swing.JMenu();
        KimyasalListele = new javax.swing.JMenu();
        KimyasalUrett = new javax.swing.JMenu();
        Kar_Orani = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        KimyasalMadde_Uret_Tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Kimyasal Ad˝"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        KimyasalMadde_Uret_Tablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KimyasalMadde_Uret_TabloMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(KimyasalMadde_Uret_Tablo);
        if (KimyasalMadde_Uret_Tablo.getColumnModel().getColumnCount() > 0) {
            KimyasalMadde_Uret_Tablo.getColumnModel().getColumn(0).setResizable(false);
            KimyasalMadde_Uret_Tablo.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel10.setText("‹retilicek kimyasal maddeyi seÁiniz:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setText("‹retim Tarihi:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("Raf ÷mr¸:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel7.setText("‹retilicek Miktar:");

        KimysalUret_Button.setText("‹RET");
        KimysalUret_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KimysalUret_ButtonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel8.setText("Kimyasal ID:");

        Kimyasal_ID.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        KimyasalUret_mesaj.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel11.setText("Kar oran˝ giriniz(%):");

        javax.swing.GroupLayout KimyasalUret_JpanelLayout = new javax.swing.GroupLayout(KimyasalUret_Jpanel);
        KimyasalUret_Jpanel.setLayout(KimyasalUret_JpanelLayout);
        KimyasalUret_JpanelLayout.setHorizontalGroup(
            KimyasalUret_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KimyasalUret_JpanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(KimyasalUret_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(155, 155, 155)
                .addGroup(KimyasalUret_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KimyasalUret_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(KimyasalUret_JpanelLayout.createSequentialGroup()
                            .addGroup(KimyasalUret_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8))
                            .addGap(30, 30, 30)
                            .addGroup(KimyasalUret_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(uretilicekMiktar)
                                .addComponent(KimysalUret_UretimTarihi)
                                .addComponent(KimysalUret_RafOmru)
                                .addComponent(Kimyasal_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(KimyasalUret_JpanelLayout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(KimyasalUret_karOrani, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(KimyasalUret_JpanelLayout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(KimysalUret_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(221, Short.MAX_VALUE))
            .addGroup(KimyasalUret_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(KimyasalUret_JpanelLayout.createSequentialGroup()
                    .addGap(43, 43, 43)
                    .addComponent(KimyasalUret_mesaj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(707, 707, 707)))
        );
        KimyasalUret_JpanelLayout.setVerticalGroup(
            KimyasalUret_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KimyasalUret_JpanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(KimyasalUret_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KimyasalUret_JpanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(330, 330, 330))
                    .addGroup(KimyasalUret_JpanelLayout.createSequentialGroup()
                        .addGroup(KimyasalUret_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(Kimyasal_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(KimyasalUret_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(KimysalUret_UretimTarihi, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(KimyasalUret_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(KimysalUret_RafOmru, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(KimyasalUret_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(uretilicekMiktar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(KimyasalUret_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(KimyasalUret_karOrani, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(KimysalUret_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(311, 311, 311))))
            .addGroup(KimyasalUret_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KimyasalUret_JpanelLayout.createSequentialGroup()
                    .addContainerGap(407, Short.MAX_VALUE)
                    .addComponent(KimyasalUret_mesaj, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(190, 190, 190)))
        );

        KimyasalMadde_Listele_Tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Kimyasal Ad˝"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        KimyasalMadde_Listele_Tablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KimyasalMadde_Listele_TabloMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(KimyasalMadde_Listele_Tablo);
        if (KimyasalMadde_Listele_Tablo.getColumnModel().getColumnCount() > 0) {
            KimyasalMadde_Listele_Tablo.getColumnModel().getColumn(0).setResizable(false);
            KimyasalMadde_Listele_Tablo.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Kimyasal maddeyi seÁiniz:");

        KimyasalListele_Ham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ham_ID", "Ad˝", "Adedi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(KimyasalListele_Ham);
        if (KimyasalListele_Ham.getColumnModel().getColumnCount() > 0) {
            KimyasalListele_Ham.getColumnModel().getColumn(0).setResizable(false);
            KimyasalListele_Ham.getColumnModel().getColumn(1).setResizable(false);
            KimyasalListele_Ham.getColumnModel().getColumn(2).setResizable(false);
        }

        jButton1.setText("Kimyasal Sil");

        javax.swing.GroupLayout KimyasalUrunListeleLayout = new javax.swing.GroupLayout(KimyasalUrunListele);
        KimyasalUrunListele.setLayout(KimyasalUrunListeleLayout);
        KimyasalUrunListeleLayout.setHorizontalGroup(
            KimyasalUrunListeleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KimyasalUrunListeleLayout.createSequentialGroup()
                .addContainerGap(164, Short.MAX_VALUE)
                .addGroup(KimyasalUrunListeleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KimyasalUrunListeleLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(670, 670, 670))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, KimyasalUrunListeleLayout.createSequentialGroup()
                        .addGroup(KimyasalUrunListeleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(KimyasalUrunListeleLayout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(KimyasalUrunListeleLayout.createSequentialGroup()
                                .addGap(187, 187, 187)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(237, 237, 237))))
        );
        KimyasalUrunListeleLayout.setVerticalGroup(
            KimyasalUrunListeleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KimyasalUrunListeleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addGroup(KimyasalUrunListeleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(88, 88, 88)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Kimyasal Ad˝:");

        KimyasakAd˝_ekleButon.setText("EKLE");
        KimyasakAd˝_ekleButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KimyasakAd˝_ekleButonActionPerformed(evt);
            }
        });

        kimyasalEkle_mesaj.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        kimyasalEkle_mesaj.setForeground(new java.awt.Color(204, 0, 0));

        KimyasalMadde_tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "ADI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        KimyasalMadde_tablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KimyasalMadde_tabloMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(KimyasalMadde_tablo);
        if (KimyasalMadde_tablo.getColumnModel().getColumnCount() > 0) {
            KimyasalMadde_tablo.getColumnModel().getColumn(0).setResizable(false);
            KimyasalMadde_tablo.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Kimyasal Maddeyi SeÁiniz");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Ham Maddeyi SeÁiniz");

        HamMadde_tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "ADI", "ADET›"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(HamMadde_tablo);
        if (HamMadde_tablo.getColumnModel().getColumnCount() > 0) {
            HamMadde_tablo.getColumnModel().getColumn(0).setResizable(false);
            HamMadde_tablo.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel4.setBackground(new java.awt.Color(255, 0, 51));
        jLabel4.setForeground(new java.awt.Color(255, 51, 51));
        jLabel4.setText("SeÁeceiniz ham maddenin ˆnce adet bilgisini ¸zerine Áift t˝klayarak giriniz");

        Kimyasal_Ham_EkleButon.setText("EKLE");
        Kimyasal_Ham_EkleButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Kimyasal_Ham_EkleButonActionPerformed(evt);
            }
        });

        KimyasalEkle_mesaj.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        KimyasalEkle_mesaj.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout KimyasalUrunEKLELayout = new javax.swing.GroupLayout(KimyasalUrunEKLE);
        KimyasalUrunEKLE.setLayout(KimyasalUrunEKLELayout);
        KimyasalUrunEKLELayout.setHorizontalGroup(
            KimyasalUrunEKLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KimyasalUrunEKLELayout.createSequentialGroup()
                .addGroup(KimyasalUrunEKLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KimyasalUrunEKLELayout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(KimyasalUrunEKLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(kimyasalEkle_mesaj, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(KimyasalUrunEKLELayout.createSequentialGroup()
                                .addComponent(KimyasalAdi_ekle, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(KimyasakAd˝_ekleButon, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(KimyasalUrunEKLELayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(KimyasalUrunEKLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(KimyasalUrunEKLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(KimyasalUrunEKLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(KimyasalUrunEKLELayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(KimyasalUrunEKLELayout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(Kimyasal_Ham_EkleButon, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(KimyasalUrunEKLELayout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(KimyasalEkle_mesaj, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        KimyasalUrunEKLELayout.setVerticalGroup(
            KimyasalUrunEKLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KimyasalUrunEKLELayout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(KimyasalUrunEKLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(KimyasakAd˝_ekleButon, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(KimyasalAdi_ekle, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(kimyasalEkle_mesaj, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(KimyasalUrunEKLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(KimyasalUrunEKLELayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(KimyasalUrunEKLELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(KimyasalUrunEKLELayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(KimyasalUrunEKLELayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(KimyasalUrunEKLELayout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(KimyasalEkle_mesaj, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Kimyasal_Ham_EkleButon, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(245, Short.MAX_VALUE))
        );

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel18.setText("Harcanan Para:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel19.setText("Kazan˝lan Para:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel20.setText("Kar Miktar˝     :");

        harcana_para.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        kazanilan_para.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        kar_miktari.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        javax.swing.GroupLayout KarOrani_JpanelLayout = new javax.swing.GroupLayout(KarOrani_Jpanel);
        KarOrani_Jpanel.setLayout(KarOrani_JpanelLayout);
        KarOrani_JpanelLayout.setHorizontalGroup(
            KarOrani_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KarOrani_JpanelLayout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addGroup(KarOrani_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel18)
                    .addGroup(KarOrani_JpanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel20)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(KarOrani_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(harcana_para, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(KarOrani_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(kar_miktari, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, KarOrani_JpanelLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(kazanilan_para, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        KarOrani_JpanelLayout.setVerticalGroup(
            KarOrani_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KarOrani_JpanelLayout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addGroup(KarOrani_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KarOrani_JpanelLayout.createSequentialGroup()
                        .addComponent(harcana_para, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(kazanilan_para, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(KarOrani_JpanelLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(72, 72, 72)
                        .addComponent(jLabel19)
                        .addGap(70, 70, 70)
                        .addGroup(KarOrani_JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(kar_miktari, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(297, Short.MAX_VALUE))
        );

        jMenu1.setText("Kimyasal");

        KimyasalEkle.setText("Kimyasal Ekle");
        KimyasalEkle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KimyasalEkleMouseClicked(evt);
            }
        });
        jMenu1.add(KimyasalEkle);

        KimyasalListele.setText("Kimyasal Listele");
        KimyasalListele.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KimyasalListeleMouseClicked(evt);
            }
        });
        jMenu1.add(KimyasalListele);

        jMenuBar1.add(jMenu1);

        KimyasalUrett.setText("Kimyasal ‹ret");
        KimyasalUrett.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KimyasalUrettMouseClicked(evt);
            }
        });
        jMenuBar1.add(KimyasalUrett);

        Kar_Orani.setText("Kar Oran˝");
        Kar_Orani.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Kar_OraniMouseClicked(evt);
            }
        });
        jMenuBar1.add(Kar_Orani);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(KimyasalUrunEKLE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(24, 24, 24)
                    .addComponent(KimyasalUrunListele, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(24, 24, 24)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(35, 35, 35)
                    .addComponent(KimyasalUret_Jpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(35, 35, 35)
                    .addComponent(KarOrani_Jpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(36, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(KimyasalUrunEKLE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(26, 26, 26)
                    .addComponent(KimyasalUrunListele, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(26, 26, 26)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(32, 32, 32)
                    .addComponent(KimyasalUret_Jpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(35, 35, 35)
                    .addComponent(KarOrani_Jpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(36, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void Jpanel_kapat(){
     KimyasalUrunEKLE.setVisible(false);
     KimyasalUrunListele.setVisible(false);
     KimyasalUret_Jpanel.setVisible(false);
     KarOrani_Jpanel.setVisible(false);
    }
    
    public void HammaddeAdi_listele(){
       HamMaddeAdi_model.setRowCount(0);
              ArrayList<hammadde> listele=new ArrayList<>();
           listele=islemler.hammadde_listele();
                if(listele!=null){
                    for(hammadde x:listele){
                    Object[] eklenecek ={x.getId(),x.getSembol()};
                    HamMaddeAdi_model.addRow(eklenecek);
                    }
                }
    }
    public void KimyasalEkle_listele(){
       Kimyasal_Uret_model.setRowCount(0);
       KimyasalMaddeAdi_model.setRowCount(0);
       KimyasalMadde_Listele_model.setRowCount(0);
              ArrayList<KimyasalMadde> listele=new ArrayList<>();
           listele=islemler.KimyasalAdi_Listele();
                if(listele!=null){
                    for(KimyasalMadde x:listele){
                    Object[] eklenecek ={x.getId(),x.getAd()};
                    KimyasalMaddeAdi_model.addRow(eklenecek);
                    KimyasalMadde_Listele_model.addRow(eklenecek);
                    Kimyasal_Uret_model.addRow(eklenecek);
                    }
                }
    
    }
    public void KimyasalListeleAtomListele(int kimyasal_id){
        ArrayList<KimyasalMadde> listele =new ArrayList<>();
       KimyasalListele_ham_model.setRowCount(0);
            listele=islemler.KimyasalHamID_Listele(kimyasal_id);
                    System.out.println("›slem boyutu:"+listele.size());
            if(listele!=null){
                    for(KimyasalMadde x:listele){
                    String adi=islemler.Hammadde_idCevir(x.getHam_id());
                        System.out.println("Ad˝: "+adi);
                    Object[] eklenecek ={x.getHam_id(),adi,x.getAded()};
                    KimyasalListele_ham_model.addRow(eklenecek);
                     }
                }
    
    
    
    
    }
    private void KimyasakAd˝_ekleButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KimyasakAd˝_ekleButonActionPerformed
        String kimyasal_adi=KimyasalAdi_ekle.getText();
        boolean ekle=islemler.kimyasalAdi_ekle(kimyasal_adi);
        if(ekle==false){
            kimyasalEkle_mesaj.setText("Ekleme ba˛ar˝s˝z!!");
        }else{
            kimyasalEkle_mesaj.setText(kimyasal_adi+" kimyasal˝ eklendi.");
            }
         KimyasalEkle_listele();
         HammaddeAdi_listele();
    }//GEN-LAST:event_KimyasakAd˝_ekleButonActionPerformed

    private void KimyasalMadde_tabloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KimyasalMadde_tabloMouseClicked
      
    }//GEN-LAST:event_KimyasalMadde_tabloMouseClicked

    private void KimyasalEkleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KimyasalEkleMouseClicked
        Jpanel_kapat();
        KimyasalUrunEKLE.setVisible(true);
        HammaddeAdi_listele();
        KimyasalEkle_listele();
    }//GEN-LAST:event_KimyasalEkleMouseClicked

    private void Kimyasal_Ham_EkleButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Kimyasal_Ham_EkleButonActionPerformed
         int Kimyasal_secili_row=KimyasalMadde_tablo.getSelectedRow();
         int[] HamMadde_secili_row=HamMadde_tablo.getSelectedRows();
           int kimyasal_id=Integer.valueOf(KimyasalMaddeAdi_model.getValueAt(Kimyasal_secili_row,0).toString());
          
         for(int x:HamMadde_secili_row){
             System.out.println("X:"+x);
             int adet=Integer.valueOf(HamMaddeAdi_model.getValueAt(x,2).toString());
             int ham_id=Integer.valueOf(HamMaddeAdi_model.getValueAt(x,0).toString());
             String ham_adi=HamMaddeAdi_model.getValueAt(x,1).toString();
             boolean islem=islemler.KimyasalHam_Ekle(kimyasal_id,ham_id,adet);
             if(islem==true){
                 System.out.println(ham_adi+"eklendi.");
                 KimyasalEkle_mesaj.setText("Kimyasal ¸r¸n bilgileri eklendi.");
                 HammaddeAdi_listele();
             }else{
                 KimyasalEkle_mesaj.setText("Kimyasal ¸r¸n bilgileri eklenemedi!");
             }
         }
        
    }//GEN-LAST:event_Kimyasal_Ham_EkleButonActionPerformed

    private void KimyasalListeleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KimyasalListeleMouseClicked
        Jpanel_kapat();
        KimyasalUrunListele.setVisible(true);
        KimyasalEkle_listele();
        
    }//GEN-LAST:event_KimyasalListeleMouseClicked

    private void KimyasalMadde_Listele_TabloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KimyasalMadde_Listele_TabloMouseClicked
                    int secili_row=KimyasalMadde_Listele_Tablo.getSelectedRow();
                
                  if(secili_row!=-1){
                 int kimyasal_id=Integer.valueOf(KimyasalMadde_Listele_model.getValueAt(secili_row,0).toString());
                 
                  ArrayList<KimyasalMadde> liste=new ArrayList<>();
               
                    KimyasalListeleAtomListele(kimyasal_id);
                   }
             
                   
               
    }//GEN-LAST:event_KimyasalMadde_Listele_TabloMouseClicked

    private void KimyasalUrettMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KimyasalUrettMouseClicked
        Jpanel_kapat();
        KimyasalUret_Jpanel.setVisible(true);
        KimyasalEkle_listele();
    }//GEN-LAST:event_KimyasalUrettMouseClicked

    private void KimyasalMadde_Uret_TabloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KimyasalMadde_Uret_TabloMouseClicked
        int secili_row =KimyasalMadde_Uret_Tablo.getSelectedRow();
        int kimyasal_id=Integer.valueOf(Kimyasal_Uret_model.getValueAt(secili_row,0).toString());
            ArrayList<KimyasalMadde> KimyasalIcerik=islemler.KimyasalHamID_Listele(kimyasal_id);    
            int adet=0;
            for(KimyasalMadde x:KimyasalIcerik){
                adet=adet + x.getAded();
            }     
            int ham_adet=KimyasalIcerik.size();
            System.out.println("Adet"+adet+ "Ham Adet:"+ham_adet);
           islemler.uretici_tarih_gecti_mi();
           Kimyasal_ID.setText(String.valueOf(kimyasal_id));
           
           
    }//GEN-LAST:event_KimyasalMadde_Uret_TabloMouseClicked

    private void KimysalUret_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KimysalUret_ButtonActionPerformed
        String uretim_tarihi =KimysalUret_UretimTarihi.getText();
        int  raf_omru =Integer.valueOf(KimysalUret_RafOmru.getText());
        int  miktar =Integer.valueOf(uretilicekMiktar.getText());
        int kimyasal_id =Integer.valueOf(Kimyasal_ID.getText());
         int kar_payi =Integer.valueOf(KimyasalUret_karOrani.getText());
            ArrayList<KimyasalMadde> KimyasalIcerik=islemler.KimyasalHamID_Listele(kimyasal_id);    
            int adet=0;
            for(KimyasalMadde x:KimyasalIcerik){
                adet=adet + x.getAded();
            }     
            int ham_sayisi=KimyasalIcerik.size();
            int say=0;
            for(KimyasalMadde x:KimyasalIcerik){
                    int ham_adet=x.getAded();
                    int ham_id=x.getHam_id();
                    boolean islem=islemler.ham_var_mi(ham_id,ham_adet,miktar,adet);
                    if(islem==true){
                    say++;
                    }
            }
            if(say!=ham_sayisi){
                KimyasalUret_mesaj.setText("Yeterli ham madde yok");
            }else{
                int iscilik_maliyeti=miktar,hammadde_maliyeti=0,toplam_maliyet=0,fiyat=0;
              for(KimyasalMadde x:KimyasalIcerik){
                    int ham_adet=x.getAded();
                    int ham_miktar=(ham_adet*miktar)/adet;
                    int ham_id=x.getHam_id();
                    ArrayList<KimyasalMadde> listele=islemler.Uretici_HamStokAzalt(ham_id,ham_miktar);
                    int say2=0,fark=ham_miktar;
                    for(int i=0;i<listele.size();i++){
                        fark-=listele.get(i).getMiktar();
                        if(fark>=0){
                            hammadde_maliyeti+=listele.get(i).getAlis_maliyeti();
                            islemler.KimyasalUret_HamSil(listele.get(i).getId());
                        }else{
                            int toplam=listele.get(i).getAlis_maliyeti();
                            toplam=(toplam*(-1)*fark)/listele.get(i).getMiktar();
                            hammadde_maliyeti+=toplam;
                            islemler.KimsayalUret_HamMiktarGuncelle(listele.get(i).getId(),(-1)*fark);
                        
                        }
                    
                    
                    }
                    
                    
                    
            } 
            toplam_maliyet=iscilik_maliyeti+hammadde_maliyeti;
            fiyat=toplam_maliyet*(100+kar_payi)/100;
            boolean islem= islemler.kimyasal_ekle(kimyasal_id,uretim_tarihi,raf_omru,iscilik_maliyeti,toplam_maliyet,fiyat);
                if(islem==true){
                KimyasalUret_mesaj.setText("Kimyasal Eklendi");
                }else{
                KimyasalUret_mesaj.setText("Kimyasal Eklenemedi");
                }
            }
            
            
    }//GEN-LAST:event_KimysalUret_ButtonActionPerformed

    private void Kar_OraniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Kar_OraniMouseClicked
        Jpanel_kapat();
        KarOrani_Jpanel.setVisible(true);
        ArrayList<Integer> muhasebe=islemler.muhasebe();
        int gelir=0,gider=0;
        for(Integer x:muhasebe){
        
           int tutar =x;
           if(tutar<0){
               tutar=tutar*(-1);
               gider+=tutar;
           }else{
               gelir+=tutar;
           }
        
        }
        harcana_para.setText(String.valueOf(gider));
        kazanilan_para.setText(String.valueOf(gelir));
        kar_miktari.setText(String.valueOf(gelir-gider));
    }//GEN-LAST:event_Kar_OraniMouseClicked

   
    public static void main(String args[]) {
      
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ekran2 dialog = new ekran2(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable HamMadde_tablo;
    private javax.swing.JPanel KarOrani_Jpanel;
    private javax.swing.JMenu Kar_Orani;
    private javax.swing.JButton KimyasakAd˝_ekleButon;
    private javax.swing.JTextField KimyasalAdi_ekle;
    private javax.swing.JMenu KimyasalEkle;
    private javax.swing.JLabel KimyasalEkle_mesaj;
    private javax.swing.JMenu KimyasalListele;
    private javax.swing.JTable KimyasalListele_Ham;
    private javax.swing.JTable KimyasalMadde_Listele_Tablo;
    private javax.swing.JTable KimyasalMadde_Uret_Tablo;
    private javax.swing.JTable KimyasalMadde_tablo;
    private javax.swing.JPanel KimyasalUret_Jpanel;
    private javax.swing.JTextField KimyasalUret_karOrani;
    private javax.swing.JLabel KimyasalUret_mesaj;
    private javax.swing.JMenu KimyasalUrett;
    private javax.swing.JPanel KimyasalUrunEKLE;
    private javax.swing.JPanel KimyasalUrunListele;
    private javax.swing.JButton Kimyasal_Ham_EkleButon;
    private javax.swing.JLabel Kimyasal_ID;
    private javax.swing.JButton KimysalUret_Button;
    private javax.swing.JTextField KimysalUret_RafOmru;
    private javax.swing.JTextField KimysalUret_UretimTarihi;
    private javax.swing.JLabel harcana_para;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel kar_miktari;
    private javax.swing.JLabel kazanilan_para;
    private javax.swing.JLabel kimyasalEkle_mesaj;
    private javax.swing.JTextField uretilicekMiktar;
    // End of variables declaration//GEN-END:variables
}


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prolab23;

import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Date;

/**
 *
 * @author AHMET YILDIRIM
 */
public class hammadde {
    private int id;
    private String sembol;
    private String adi;
    private int firma_id;
    private int ham_id;
    private int miktar;
    private String uretim_tarihi;
    private int raf_omru;
    private int fiyat;
    private String firma_adi;
    private int masraf;
    private int birim_masraf;
    public hammadde(int id, String sembol, String adi) {
        this.id = id;
        this.sembol = sembol;
        this.adi = adi;
    }

    public hammadde() {
    }
    
    public int getId() {
        return id;
    }

    public hammadde(int id, int ham_id, int miktar, String uretim_tarihi, int raf_omru, int masraf) {
         veritabani_islemleri islemler=new veritabani_islemleri();
        this.id = id;
        this.ham_id = ham_id;
        this.miktar = miktar;
        this.uretim_tarihi = uretim_tarihi;
        this.raf_omru = raf_omru;
        this.masraf = masraf;
     //   this.sembol=islemler.Hammadde_idCevir(ham_id);
    }

    public hammadde(int id,int firma_id, int ham_id, int miktar, String uretim_tarihi, int raf_omru, int fiyat) {
        veritabani_islemleri islemler=new veritabani_islemleri();
        this.id=id;
        this.firma_id = firma_id;
        this.ham_id = ham_id;
        this.miktar = miktar;
        this.uretim_tarihi = uretim_tarihi;
        this.raf_omru = raf_omru;
        this.fiyat = fiyat;
        this.firma_adi=islemler.Tedarikci_idCevir(firma_id);
        this.sembol=islemler.Hammadde_idCevir(ham_id);
        this.masraf=(miktar*fiyat)+kargo_ucreti(firma_adi);
        this.birim_masraf=masraf/miktar;
    }
    public int kargo_ucreti(String firma_adi){
        veritabani_islemleri islemler=new veritabani_islemleri();
        int kargo_masrafi= islemler.kargo_masrafi(firma_adi);  
        return kargo_masrafi;
    }
    public void setId(int id) {
        this.id = id;
    }

    public int getBirim_masraf() {
        return birim_masraf;
    }

    public void setBirim_masraf(int birim_masraf) {
        this.birim_masraf = birim_masraf;
    }

    public int getFirma_id() {
        return firma_id;
    }

    public int getMasraf() {
        return masraf;
    }

    public void setMasraf(int masraf) {
        this.masraf = masraf;
    }
    
    public void setFirma_id(int firma_id) {
        this.firma_id = firma_id;
    }

    public int getHam_id() {
        return ham_id;
    }

    public void setHam_id(int ham_id) {
        this.ham_id = ham_id;
    }

    public int getMiktar() {
        return miktar;
    }

    public void setMiktar(int miktar) {
        this.miktar = miktar;
    }

    public String getUretim_tarihi() {
        return uretim_tarihi;
    }

    public void setUretim_tarihi(String uretim_tarihi) {
        this.uretim_tarihi = uretim_tarihi;
    }

    public int getRaf_omru() {
        return raf_omru;
    }

    public void setRaf_omru(int raf_omru) {
        this.raf_omru = raf_omru;
    }

    public int getFiyat() {
        return fiyat;
    }

    public void setFiyat(int fiyat) {
        this.fiyat = fiyat;
    }

    public String getFirma_adi() {
        return firma_adi;
    }

    public void setFirma_adi(String firma_adi) {
        this.firma_adi = firma_adi;
    }

    public String getSembol() {
        return sembol;
    }

    public void setSembol(String sembol) {
        this.sembol = sembol;
    }

    public String getAdi() {
        return adi;
    }

    public void setAdi(String adi) {
        this.adi = adi;
    }
    public hammadde clon(hammadde x){
        return x;
    }
    public boolean  son_kullanma_kontrol(){
        int tarih=Integer.valueOf(getUretim_tarihi());
        int omur=getRaf_omru();
        int yil=tarih%10000;
        tarih=tarih/10000;
        int ay=tarih%100;
        tarih=tarih/100;
        int gun=tarih;
        
        
          Date simdikiZaman = new Date();
        int simdiki_gun=simdikiZaman.getDate();
        int simdiki_ay=simdikiZaman.getMonth()+1;
        int simdiki_yil=simdikiZaman.getYear()+1900;
        
        int yil_fark=simdiki_yil-yil;
        int ay_fark=simdiki_ay-ay;
        int gun_fark=simdiki_gun-gun;
        
        int fark=0;
        fark+=yil_fark*365;
        fark+=ay_fark*30;
        fark+=gun_fark;
        omur =omur*365;
        
        if(fark>omur){
            return true;
        }else{
           return false;
        }
        
        
    
    }
}


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prolab23;

/**
 *
 * @author AHMET YILDIRIM
 */
public class musteri {
    private int id;
    private String ad;
    private String adres;

    public musteri() {
    }

    public musteri(int id, String ad, String adres) {
        this.id = id;
        this.ad = ad;
        this.adres = adres;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getAd() {
        return ad;
    }

    public void setAd(String ad) {
        this.ad = ad;
    }

    public String getAdres() {
        return adres;
    }

    public void setAdres(String adres) {
        this.adres = adres;
    }
    
}


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prolab23;

/**
 *
 * @author AHMET YILDIRIM
 */
public class tedarikcifirma {
    private int id;
    private String adi;
    private String ¸lke;
    private String sehir;

    public tedarikcifirma(int id, String adi, String ¸lke, String sehir) {
        this.id = id;
        this.adi = adi;
        this.¸lke = ¸lke;
        this.sehir = sehir;
    }

    public tedarikcifirma() {
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getAdi() {
        return adi;
    }

    public void setAdi(String adi) {
        this.adi = adi;
    }

    public String get‹lke() {
        return ¸lke;
    }

    public void set‹lke(String ¸lke) {
        this.¸lke = ¸lke;
    }

    public String getSehir() {
        return sehir;
    }

    public void setSehir(String sehir) {
        this.sehir = sehir;
    }
    
}



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prolab23;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author AHMET YILDIRIM
 */
public class veritabani_islemleri {
    private String kullanici_adi = "root";
    private String parola = "";
    private String db_ismi = "prolab23";
    private String host =  "localhost";
    private int port = 3306;
    private Connection con = null;
    
    private Statement sorgum = null;
    private PreparedStatement preparedStatement = null;
    
        
    public veritabani_islemleri(){
           String url = "jdbc:mysql://" + host + ":" + port + "/" + db_ismi+ "?useUnicode=true&characterEncoding=utf8";
        
        
        try {
            
            Class.forName("com.mysql.jdbc.Driver");
      
            
        } catch (ClassNotFoundException ex) {
            System.out.println("Driver Bulunamad˝....");
        }
        try {
            con =  (Connection) DriverManager.getConnection(url, kullanici_adi, parola);
              
            
        } catch (SQLException ex) {
            System.out.println("Balant˝ Ba˛ar˝s˝z...");
            //ex.printStackTrace();
        }
       
     }    
     public boolean ham_ekle(String sembol,String adi){
        String sorgu = "Insert Into ham_adi (sembol,adi) VALUES(?,?)";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            
            
            preparedStatement.setString(1, sembol);
            preparedStatement.setString(2, adi);
            preparedStatement.executeUpdate();
            return true;
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         return false;
     
     }
     public ArrayList<hammadde> hammadde_listele() {
        
        ArrayList<hammadde> cikti = new ArrayList<hammadde>();
        
        try {
            sorgum =  (Statement) con.createStatement();
            String sorgu =  "Select * From ham_adi";
            
            ResultSet rs =  sorgum.executeQuery(sorgu);
            
            while(rs.next()) {
                int id = rs.getInt("id");
                String sembol = rs.getString("sembol");
                String adi = rs.getString("adi");
               
                cikti.add(new hammadde(id,sembol,adi));
                
                
            }
            return cikti;
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return null;
            
        }
         
    }
      public int hamId_Bul(int id){
       try {
             String sorgu =  "Select * From ham_madde where id=?";
          
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            preparedStatement.setInt(1, id);
            ResultSet rs= preparedStatement.executeQuery();
          int ham_id=0;
            while(rs.next()) {
                 ham_id=rs.getInt("ham_id");
                
              
            }
            return ham_id;
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return 0;
            
    }
    
    }
    public void hammadde_guncelle(int id,String yeni_sembol,String yeni_adi) {
        String sorgu =  "Update ham_adi set sembol = ? , adi = ? where id = ?";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            
            
            preparedStatement.setString(1,yeni_sembol);
            preparedStatement.setString(2,yeni_adi);  
            preparedStatement.setInt(3, id);
            
            preparedStatement.executeUpdate();
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
    }
    public void hammadde_sil(int id) {
        
        String sorgu = "Delete from ham_adi where id = ?";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            preparedStatement.setInt(1, id);
            preparedStatement.executeUpdate();
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        
    }// HAM MADDE EKLEME SONU
    public boolean hamMadde_uret(int firma_id,int ham_id,int miktar,int rafomru,int fiyat,String uretim_tarihi){
             String sorgu = "Insert Into ham_madde (tfirma_id ,ham_id,miktar,uretim_tarihi,rafomru,fiyat) VALUES(?,?,?,?,?,?)";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            
            
            preparedStatement.setInt(1, firma_id);
            preparedStatement.setInt(2, ham_id);
            preparedStatement.setInt(3, miktar);
            preparedStatement.setString(4, uretim_tarihi);
            preparedStatement.setInt(5, rafomru);
            preparedStatement.setInt(6, fiyat);
                    
            preparedStatement.executeUpdate();
            return true;
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         return false;
    }
    public String Hammadde_idCevir(int id){
       try {
           
            sorgum =  (Statement) con.createStatement();
            String sorgu =  "Select * From ham_adi where id="+id+"";
            
            ResultSet rs =  sorgum.executeQuery(sorgu);
            String ad = null;
            while(rs.next()) {
                 ad = rs.getString("sembol");
                   
            }
            return ad;
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return null;
            
        }

    }
    public String Tedarikci_idCevir(int id){
       try {
           
            sorgum =  (Statement) con.createStatement();
            String sorgu =  "Select * From tedarikci_firma where id="+id+"";
            
            ResultSet rs =  sorgum.executeQuery(sorgu);
            String ad = null;
            while(rs.next()) {
                 ad = rs.getString("firma_adi");
                   
            }
            return ad;
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return null;
            
        }

    }
    public ArrayList<hammadde> hamUret_listele() {
        
        ArrayList<hammadde> cikti = new ArrayList<hammadde>();
        
        try {
            sorgum =  (Statement) con.createStatement();
            String sorgu =  "Select * From ham_madde";
            
            ResultSet rs =  sorgum.executeQuery(sorgu);
            
            while(rs.next()) {
                int id = rs.getInt("id");
                int firma_id=rs.getInt("tfirma_id");
                int ham_id=rs.getInt("ham_id");
                int miktar=rs.getInt("miktar");
                String uretimTarihi = rs.getString("uretim_tarihi");
                int raf_omru =rs.getInt("rafomru");
                int fiyat =rs.getInt("fiyat");
               
                cikti.add(new hammadde(id, firma_id, ham_id, miktar, uretimTarihi, raf_omru, fiyat));
                
                
            }
            return cikti;
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return null;
            
        }
         
    }
    public boolean tedarikcifirma_ekle(String adi,String ulke,String sehir){
        String sorgu = "Insert Into tedarikci_firma (firma_adi,ulke,sehir) VALUES(?,?,?)";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            
            
            preparedStatement.setString(1, adi);
            preparedStatement.setString(2, ulke);
            preparedStatement.setString(3, sehir);
            preparedStatement.executeUpdate();
            return true;
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         return false;
     
     }
    
     public ArrayList<tedarikcifirma> tedarikcifirma_listele() {
        
        ArrayList<tedarikcifirma> cikti = new ArrayList<tedarikcifirma>();
        
        try {
            sorgum =  (Statement) con.createStatement();
            String sorgu =  "Select * From tedarikci_firma";
            
            ResultSet rs =  sorgum.executeQuery(sorgu);
            
            while(rs.next()) {
                int id = rs.getInt("id");
                String adi = rs.getString("firma_adi");
                String ulke = rs.getString("ulke");
                String sehir = rs.getString("sehir");
               
                cikti.add(new tedarikcifirma(id,adi,ulke,sehir));
                
                
            }
            return cikti;
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return null;
            
        }
         
    }
     
    public void tedarikcifirma_guncelle(int id,String yeni_adi,String yeni_ulke,String yeni_sehir) {
        String sorgu =  "Update tedarikci_firma set firma_adi = ? , ulke = ? , sehir=? where id = ?";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            
            
            preparedStatement.setString(1,yeni_adi);
            preparedStatement.setString(2,yeni_ulke);  
            preparedStatement.setString(3, yeni_sehir);
            preparedStatement.setInt(4, id);
            preparedStatement.executeUpdate();
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
    }
    public void tedarikcifirma_sil(int id){
        
        String sorgu = "Delete from tedarikci_firma where id = ?";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            preparedStatement.setInt(1, id);
            preparedStatement.executeUpdate();
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
        // TEDAR›K«› F›RMA ›ﬁLEMLER› SONU
       public boolean musteri_ekle(String isim,String adres){
        String sorgu = "Insert Into musteri (isim,adres) VALUES(?,?)";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            
            
            preparedStatement.setString(1, isim);
            preparedStatement.setString(2, adres);
            preparedStatement.executeUpdate();
            return true;
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         return false;
     
     }
    
     public ArrayList<musteri> musteri_listele() {
        
        ArrayList<musteri> cikti = new ArrayList<musteri>();
        
        try {
            sorgum =  (Statement) con.createStatement();
            String sorgu =  "Select * From musteri";
            
            ResultSet rs =  sorgum.executeQuery(sorgu);
            
            while(rs.next()) {
                int id = rs.getInt("id");
                String isim = rs.getString("isim");
                String adres = rs.getString("adres");
                
                cikti.add(new musteri(id,isim,adres));
                
                
            }
            return cikti;
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return null;
            
        }
         
    }
     
    public void musteri_guncelle(int id,String yeni_isim,String yeni_adres) {
        String sorgu =  "Update musteri set isim = ? , adres = ?  where id = ?";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            
            
            preparedStatement.setString(1,yeni_isim);
            preparedStatement.setString(2,yeni_adres);
            preparedStatement.setInt(3, id);
            preparedStatement.executeUpdate();
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
    }
    public void musteri_sil(int id) {
        
        String sorgu = "Delete from musteri where id = ?";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            preparedStatement.setInt(1, id);
            preparedStatement.executeUpdate();
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }
    public ArrayList<hammadde> tedarikci_urun_listele(int ham_id){
       ArrayList<hammadde> cikti = new ArrayList<hammadde>();
        
        try {
            
            String sorgu =  "Select * From ham_madde where ham_id=?";
          
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            preparedStatement.setInt(1, ham_id);
            ResultSet rs= preparedStatement.executeQuery();
            
            while(rs.next()) {
                int id = rs.getInt("id");
                int firma_id=rs.getInt("tfirma_id");
                int miktar=rs.getInt("miktar");
                String uretim_tarihi=rs.getString("uretim_tarihi");
                int raf_omru=rs.getInt("rafomru");
                int fiyat=rs.getInt("fiyat");
                 cikti.add(new hammadde(id, firma_id,  ham_id,  miktar,  uretim_tarihi,  raf_omru,  fiyat));
               
                
            }
            return cikti;
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return null;
            
        }
    }
   public int kargo_mesafesi(String sehir){
           try {
             String sorgu =  "Select * From mesafe where sehir1=?";
          
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            preparedStatement.setString(1, sehir);
            ResultSet rs= preparedStatement.executeQuery();
          int uzaklik=0;
            while(rs.next()) {
                 uzaklik=rs.getInt("uzaklik");
                
              
            }
            return uzaklik;
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return 0;
            
    }
    }
    
    public int kargo_masrafi(String firma_adi){
    
        try {
             String sorgu =  "Select * From tedarikci_firma where firma_adi=?";
          
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            preparedStatement.setString(1, firma_adi);
            ResultSet rs= preparedStatement.executeQuery();
            String ulke = null;
            String sehir = null;
             while(rs.next()) {
                 ulke= rs.getString("ulke");
                 sehir= rs.getString("sehir");
                
                
                
            }
            
            if(ulke.equals("T‹RK›YE")){
                
                    return (int) ((0.5)*kargo_mesafesi(sehir));
                
                }else{
                     return kargo_mesafesi(sehir);
                }
                
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return 0;
            
    }
}
    public void tutar_ekle(int tutar){
          String sorgu = "Insert Into muhasebe (tutar) VALUES(?)";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);          
            preparedStatement.setInt(1,tutar);   
              preparedStatement.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
       public void HamMaddeAl(int id,int ham_id,int veri_miktar, int miktar, int toplam_maliyet) {
         ArrayList<hammadde>  liste =tedarikci_urun_listele(ham_id);
         
         String uretim_tarihi=null;
         int raf_omru=0;
   
         for(int i=0;i<liste.size();i++){
             if(liste.get(i).getId()==id){
                 uretim_tarihi=liste.get(i).getUretim_tarihi();
                 raf_omru=liste.get(i).getRaf_omru();
                 break;
             }
         }
 
         
         int alis_maliyeti=toplam_maliyet/miktar;
        String sorgu1 = "Insert Into uretici_hammadde (ham_id,alis_maliyeti,stok,uretim_tarihi,rafomru) VALUES(?,?,?,?,?)";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu1);
            
            
            preparedStatement.setInt(1,ham_id);
            preparedStatement.setInt(2, alis_maliyeti);
            preparedStatement.setInt(3, miktar);
            preparedStatement.setString(4,uretim_tarihi);
            preparedStatement.setInt(5,raf_omru);    
            preparedStatement.executeUpdate();
            int tutar =-1*alis_maliyeti;
            tutar_ekle(tutar);
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
           if(veri_miktar==miktar){
               String sorgu = "Delete from ham_madde where id = ?";
        
                try {
                preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
                preparedStatement.setInt(1, id);
                preparedStatement.executeUpdate();
            
                } catch (SQLException ex) {
                Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
                }
            
            }else{
                 String sorgu =  "Update ham_madde set miktar = ?   where id = ?";
        
                try {
                 preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            
            
                    int yeni_miktar=veri_miktar-miktar;
                    preparedStatement.setInt(1,yeni_miktar);
                    preparedStatement.setInt(2, id);
                    preparedStatement.executeUpdate();
            
                } catch (SQLException ex) {
                Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
                }
            
            }
    }
    
    
     public boolean kimyasalAdi_ekle(String  ad){
          String sorgu = "Insert Into kimyasal_madde_adi (adi) VALUES(?)";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);          
            preparedStatement.setString(1,ad); 
              preparedStatement.executeUpdate();
            return true;
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }
    public ArrayList<KimyasalMadde> KimyasalAdi_Listele(){
    
       ArrayList<KimyasalMadde> cikti = new ArrayList<KimyasalMadde>();
        
        try {
            sorgum =  (Statement) con.createStatement();
            String sorgu =  "Select * From kimyasal_madde_adi";
            
            ResultSet rs =  sorgum.executeQuery(sorgu);
            
            while(rs.next()) {
                int id = rs.getInt("id");
                String kimyasal_adi=rs.getString("adi");
              
               
                cikti.add(new KimyasalMadde(id, kimyasal_adi));
                
                
            }
            return cikti;
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return null;
            
        }
    }
    public boolean KimyasalHam_Ekle(int kimyasal_id,int ham_id,int adet){
    
     String sorgu = "Insert Into kimyasalmadde_atomlari (kimyasal_id,ham_id,adeti) VALUES(?,?,?)";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);          
            preparedStatement.setInt(1,kimyasal_id); 
            preparedStatement.setInt(2,ham_id); 
            preparedStatement.setInt(3,adet); 
              preparedStatement.executeUpdate();
            return true;
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    
    }
    public ArrayList<KimyasalMadde> KimyasalHamID_Listele(int kimyasal_id){
        
           ArrayList<KimyasalMadde> cikti = new ArrayList<KimyasalMadde>();
        
        try {
            sorgum =  (Statement) con.createStatement();
            String sorgu =  "Select * From kimyasalmadde_atomlari where kimyasal_id=?";
              preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);          
            preparedStatement.setInt(1,kimyasal_id); 
             
            ResultSet rs=  preparedStatement.executeQuery();
          
            //ResultSet rs =  sorgum.executeQuery(sorgu);
            
            while(rs.next()) {
                int ham_id = rs.getInt("ham_id");
                int adedi = rs.getInt("adeti");
                cikti.add(new KimyasalMadde(kimyasal_id,adedi,ham_id));
              
            }
            
                
            return cikti;
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return null;
            
        }
    
    
    }
    
    public ArrayList<hammadde> uretici_hammadde_listele() {
        
        ArrayList<hammadde> cikti = new ArrayList<hammadde>();
        
        try {
            sorgum =  (Statement) con.createStatement();
            String sorgu =  "Select * From uretici_hammadde";
            
            ResultSet rs =  sorgum.executeQuery(sorgu);
            
            while(rs.next()) {
                int id = rs.getInt("id");
                int ham_id=rs.getInt("ham_id");
                int alis_maliyeti=rs.getInt("alis_maliyeti");
                  String uretim_tarihi = rs.getString("uretim_tarihi");
                int raf_omru =rs.getInt("rafomru");
                int miktar =rs.getInt("stok");
                     
               
                cikti.add(new hammadde(id,  ham_id,  miktar,  uretim_tarihi,  raf_omru,  alis_maliyeti));
                
                
            }
            return cikti;
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return null;
            
        }
         
    }
    public boolean ureticiHammadde_Sil(int id){
    
         String sorgu = "Delete from uretici_hammadde where id =?";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            preparedStatement.setInt(1, id);
            preparedStatement.executeUpdate();
            return  true;
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    
    
    }
    public void uretici_tarih_gecti_mi(){
    
              ArrayList<hammadde> cikti = new ArrayList<hammadde>();
        
        try {
            sorgum =  (Statement) con.createStatement();
            String sorgu =  "Select * From uretici_hammadde";
            
            ResultSet rs =  sorgum.executeQuery(sorgu);
            
            while(rs.next()) {
                int id = rs.getInt("id");
                int ham_id=rs.getInt("ham_id");
                int alis_maliyeti=rs.getInt("alis_maliyeti");
                  String uretim_tarihi = rs.getString("uretim_tarihi");
                int raf_omru =rs.getInt("rafomru");
                int miktar =rs.getInt("stok");
                     
               
                cikti.add(new hammadde(id,  ham_id,  miktar,  uretim_tarihi,  raf_omru,  alis_maliyeti));
                
                
            }
      
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
          
            
        }
    
            for(int i=0;i<cikti.size();i++){
               boolean kontrol=cikti.get(i).son_kullanma_kontrol();
               if(kontrol==true){
                   ureticiHammadde_Sil(cikti.get(i).getId());
                   System.out.println("Bu kimyasal˝ siliyorum dostum");
               }
            
            }
    }
  
    public boolean  ham_var_mi(int ham_id,int ham_adet,int miktar,int adet){
      String sorgu =  "Select * From uretici_hammadde where ham_id=?";
     try {
          
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            preparedStatement.setInt(1, ham_id);
            ResultSet  rs = preparedStatement.executeQuery();
            int stok = 0;
            while(rs.next()){
                stok+=rs.getInt("stok");
            }
            int lazim_miktar=(miktar*ham_adet)/adet;
            System.out.println("Stok"+stok);
            if(stok>=lazim_miktar){
            return true;
            }else{
            return false;
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return false;
            
        }
    
    }
    
    public ArrayList<KimyasalMadde> Uretici_HamStokAzalt(int ham_id,int ham_miktar){
    
        ArrayList<KimyasalMadde> cikti = new ArrayList<KimyasalMadde>();
         String sorgu =  "Select * From uretici_hammadde where ham_id=?";
        try {
           
           
              preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            preparedStatement.setInt(1, ham_id);
            ResultSet  rs = preparedStatement.executeQuery();
           
            int say=0;
            while(rs.next()) {
                int id = rs.getInt("id");
                int alis_maliyeti=rs.getInt("alis_maliyeti");
                  String uretim_tarihi = rs.getString("uretim_tarihi");
                int raf_omru =rs.getInt("rafomru");
                int miktar =rs.getInt("stok");
                say+=miktar;    
                cikti.add(new KimyasalMadde(id,  ham_id,  miktar,  alis_maliyeti,uretim_tarihi,  raf_omru));
               
                if(say>=ham_miktar){
                break;
                }
                
                
            }
            return cikti;
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return null;
            
        }
    
    
    }
    public void KimyasalUret_HamSil(int id){
        
         String sorgu = "Delete from uretici_hammadde where id =?";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            preparedStatement.setInt(1, id);
            preparedStatement.executeUpdate();
           System.out.println("Yeni bilgiler silindi.");
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            
        }
    
    }
    
    public void KimsayalUret_HamMiktarGuncelle(int id,int miktar) {
        String sorgu =  "Update uretici_hammadde set stok = ?   where id = ?";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            
            
            preparedStatement.setInt(1,miktar);
            preparedStatement.setInt(2,id);
            
            preparedStatement.executeUpdate();
            
               System.out.println("Yeni bilgiler g¸ncellendi.");
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
    }
    public boolean kimyasal_ekle(int kimyasal_id,String uretim_tarihi,int raf_omru,int iscilik_maliyeti,int toplam_maliyet,int fiyat){
    
        String sorgu = "Insert Into uretilen_kimyasal (kimyasal_id,uretim_tarihi,raf_omru,iscilik_maliyeti,toplam_maliyet,satis_fiyati) VALUES(?,?,?,?,?,?)";
        
        try {
            preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);          
            preparedStatement.setInt(1,kimyasal_id); 
            preparedStatement.setString(2, uretim_tarihi);
            preparedStatement.setInt(3,raf_omru); 
            preparedStatement.setInt(4,iscilik_maliyeti);
            preparedStatement.setInt(5,toplam_maliyet);
            preparedStatement.setInt(6,fiyat);
              preparedStatement.executeUpdate();
            return true;
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    
    
    
    
    }
    public ArrayList<Integer> muhasebe(){
    
      ArrayList<Integer> cikti = new ArrayList<Integer>();
         String sorgu =  "Select * From muhasebe";
        try {
           
           
              preparedStatement = (PreparedStatement) con.prepareStatement(sorgu);
            
            ResultSet  rs = preparedStatement.executeQuery();
           
            int say=0;
            while(rs.next()) {
               
                int tutar=rs.getInt("tutar");
                cikti.add(new Integer(tutar));
            }
            return cikti;
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(veritabani_islemleri.class.getName()).log(Level.SEVERE, null, ex);
            return null;
            
        }
    
    
    }
}